### App Versions
```
{
	"frappe": "16.0.0-dev",
	"rentals": "0.0.1"
}
```
### Route
```
Form/ToDo/new-todo-iezazneuzg
```
### Traceback
```
Traceback (most recent call last):
  File "apps/frappe/frappe/app.py", line 117, in application
    response = frappe.api.handle(request)
  File "apps/frappe/frappe/api/__init__.py", line 49, in handle
    data = endpoint(**arguments)
  File "apps/frappe/frappe/api/v1.py", line 36, in handle_rpc_call
    return frappe.handler.handle()
  File "apps/frappe/frappe/handler.py", line 50, in handle
    data = execute_cmd(cmd)
  File "apps/frappe/frappe/handler.py", line 86, in execute_cmd
    return frappe.call(method, **frappe.form_dict)
  File "apps/frappe/frappe/__init__.py", line 1727, in call
    return fn(*args, **newargs)
  File "apps/frappe/frappe/utils/typing_validations.py", line 32, in wrapper
    return func(*args, **kwargs)
  File "apps/frappe/frappe/desk/form/save.py", line 43, in savedocs
    doc.save()
  File "apps/frappe/frappe/model/document.py", line 123, in wrapper
    return func(self, *args, **kwargs)
  File "apps/frappe/frappe/model/document.py", line 448, in save
    return self._save(*args, **kwargs)
  File "apps/frappe/frappe/model/document.py", line 123, in wrapper
    return func(self, *args, **kwargs)
  File "apps/frappe/frappe/model/document.py", line 471, in _save
    return self.insert()
  File "apps/frappe/frappe/model/document.py", line 123, in wrapper
    return func(self, *args, **kwargs)
  File "apps/frappe/frappe/model/document.py", line 393, in insert
    self.run_method("before_insert")
  File "apps/frappe/frappe/model/document.py", line 1095, in run_method
    out = Document.hook(fn)(self, *args, **kwargs)
  File "apps/frappe/frappe/model/document.py", line 1480, in composer
    hooks.append(frappe.get_attr(handler))
  File "apps/frappe/frappe/__init__.py", line 1717, in get_attr
    return getattr(get_module(modulename), methodname)
  File "apps/frappe/frappe/__init__.py", line 1433, in get_module
    return importlib.import_module(modulename)
  File "/usr/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 879, in exec_module
  File "<frozen importlib._bootstrap_external>", line 1017, in get_code
  File "<frozen importlib._bootstrap_external>", line 947, in source_to_code
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "apps/rentals/rentals/api.py", line 5
    def get emoji():
            ^^^^^
SyntaxError: invalid syntax

```
### Request Data
```
{
	"type": "POST",
	"args": {
		"doc": "{\"docstatus\":0,\"doctype\":\"ToDo\",\"name\":\"new-todo-iezazneuzg\",\"__islocal\":1,\"__unsaved\":1,\"owner\":\"Administrator\",\"status\":\"Open\",\"priority\":\"Medium\",\"date\":\"2025-01-22\",\"description\":\"<div class=\\\"ql-editor read-mode\\\"><p>my todo</p></div>\"}",
		"action": "Save"
	},
	"btn": {
		"jQuery370016709243160498921": {
			"events": {
				"click": [
					{
						"type": "click",
						"origType": "click",
						"guid": 370,
						"namespace": ""
					}
				]
			}
		}
	},
	"freeze": true,
	"headers": {},
	"error_handlers": {},
	"url": "/api/method/frappe.desk.form.save.savedocs",
	"request_id": null
}
```
### Response Data
```
{
	"exception": "SyntaxError: invalid syntax",
	"exc_type": "SyntaxError",
	"_exc_source": "rentals (app)"
}
```